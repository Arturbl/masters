var currentState[4] = [0, 0, 0, 0]
var newState[4] = [0, 0, 0, 0]

timer.period[0] = 0

call sound.system(-1)
call leds.top(0, 0, 0)
call leds.bottom.left(0, 0, 0)
call leds.bottom.right(0, 0, 0)
call leds.circle(0, 0, 0, 0, 0, 0, 0, 0)

sub displayState
    call leds.circle(0, currentState[1] * 32, 0, currentState[3] * 32, 0, currentState[2] * 32, 0, currentState[0] * 32)

onevent buttons
    when button.forward == 1 do
        motor.left.target = 350
        motor.right.target = 350
        newState[0] = 0
        newState[1] = 0
        newState[2] = 0
        newState[3] = 0
    end
    when button.center == 1 do
        motor.left.target = 0
        motor.right.target = 0
        newState[0] = 0
        newState[1] = 0
        newState[2] = 0
        newState[3] = 0
    end

    call math.copy(currentState, newState)
    callsub displayState

onevent prox
    when prox.ground.delta[0] < 225 and prox.ground.delta[1] > 475 do
        motor.left.target = 350
        motor.right.target = -200
        newState[0] = 0
        newState[1] = 0
        newState[3] = 0
    end
    when prox.ground.delta[0] > 450 and prox.ground.delta[1] < 250 do
        motor.left.target = -200
        motor.right.target = 350
        newState[0] = 0
        newState[1] = 0
        newState[3] = 0
    end
    when prox.ground.delta[0] > 450 and prox.ground.delta[1] > 450 do
        if currentState[1] == 0 and currentState[3] == 0 then
            motor.left.target = 350
            motor.right.target = 350
        end
    end
    when prox.ground.delta[0] < 375 and prox.ground.delta[1] < 375 do
        motor.left.target = -350
        motor.right.target = -350
        newState[1] = 1
        newState[3] = 0
        timer.period[0] = 500
    end

    call math.copy(currentState, newState)
    callsub displayState

onevent timer0
    timer.period[0] = 0
    if currentState[0] == 0 and currentState[1] == 1 and currentState[2] == 0 and currentState[3] == 0 then
        motor.left.target = 350
        motor.right.target = -200
        newState[0] = 0
        newState[1] = 0
        newState[2] = 1
        newState[3] = 1
        timer.period[0] = 500
    end
    if currentState[0] == 0 and currentState[1] == 1 and currentState[2] == 1 and currentState[3] == 0 then
        motor.left.target = -200
        motor.right.target = 350
        newState[0] = 0
        newState[1] = 0
        newState[2] = 0
        newState[3] = 1
        timer.period[0] = 500
    end
    if currentState[3] == 1 then
        motor.left.target = 350
        motor.right.target = 350
        newState[3] = 0
    end

    call math.copy(currentState, newState)
    callsub displayState
